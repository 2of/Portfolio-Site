/* floatingNav.module.scss */

.navContainer {
  z-index: 499;
  position: fixed;
  bottom: 12px;
  left: 50%;
  transform: translateX(-50%); /* Only translate X-axis for centering */
  background-color: var(--bg);

  border-radius: var(--border-radius);

  // // z-index: 1000;

  // -webkit-backdrop-filter: blur(var(--blur-radius));
  // transition: background-color 0.3s ease, box-shadow 0.3s ease;
  border: 2px solid var(--text-color);
  width: auto; /* Let it adapt based on content */
  max-width: 100%; /* Allow full width, but cap at 100% of the screen */
  box-sizing: border-box; /* Ensure padding does not affect the overall width */
  box-shadow: 0 0 0 2px var(--bg); /* White border outside the black border */
 * { 
  // transition: all 0.5s ease;
 }
  &.dark-mode {
    background-color: var(--dark-nav-bg);
  }

  /* Slide-in animation */

  .activeLink {
    background-color: var(--accent-color);
    * { 
      color: var(--text-color);
     
    }
  
  }
  
  &.float { 
    /* Add styles for float if needed */
    .activeLink {
      background: none;
      text-decoration: underline;
      // background-color: var(--accent-color);
      * { 
        color: var(--accent-color);
        text-decoration: underline;
       
      }
    
    }
  }

  &.sm { 
    background-color: var(  --bg);
    // backdrop-filter: blur(var(--blur-radius));
    overflow: hidden;
    bottom: 0;
    border-radius: 0 0 ;
    border-left: none;
    border-bottom: none;
    border-right: none;
    width: 100%;
    border-top: 2px solid var(--text-color) ;
    // width: fit-content;
    box-shadow: 0 -12px 24px rgba(0, 0, 0, 0.265);
    height: var(--nav-height); // iphone safe ?!??!
  }

  &.rightAlignFloat { 
    left: 5%;
    top: 5%;
    height: fit-content;
    border-radius: 0;
    transition: left 0.3s ease-in-out, top 0.3s ease-in-out, opacity 0.3s ease-in-out;

    .navList { 
      flex-direction: column;
    }
  }

  &.jump {
    animation: jump 0.6s ease-in-out;
    will-change: transform;
  }
}

@keyframes slideIn {
  0% {
    transform: translateX(-50%) translateY(100vh); /* Start from below the screen */
  }
  100% {
    transform: translateX(-50%) translateY(0); /* End at its final position at the bottom */
  }
}

@keyframes jump {
  0%, 100% {
    // opacity: 1;
    // transform: translateX(-50%) translateY(0) scale(1);
    // box-shadow: 0 0 0 rgba(0, 0, 0, 0.3); /* Initial shadow (barely visible) */
  }
  50% {
    // opacity: 0;
    filter: blur(4px);
    // ?box-shadow: 0 10px 20px rgba(0, 0, 0, 0.5); /* Larger shadow for depth */
  }
  
}
.navList {
  display: flex;
  flex-direction: row; /* Align items horizontally */
  list-style: none;
  // margin: 0;
  height: 12px;
  gap: 12px;
  padding: 4px 0px 2px 24px;
  align-items: center; /* Center the nav items horizontally */
justify-content: center;
}

.navItem {
  // background-color:orange;
  // display: flex;
  // align-items: center;
  // flex-direction: row;
  // height: 36px;
  // background-color: red;


  // justify-content: center;

}

.link {
  display: flex;
  cursor: pointer;
  align-items: center;
  // background-color: red;
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}


.link:hover {
  color: var(--hover-text-color);
}

.darkModeItem {
  margin-top: var(--spacing-medium); /* Add space between the nav links and the dark mode toggle */
}


.sm { 
  // background-color: red;
  border: none;
  box-shadow: none;
  transition: all 0.3s ease-in-out;

  // background-color: red;
  // height: 12000px;
    .navList { 
      // background-color: red;
      display: flex;
      align-items: center;
      justify-content: center;
      
      .link { 
        font-size: 24px;

      }
      .activeLink { 
        font-size: 24px
      }
    }

   &.onlyButton { 
    // background-color: green;
    // padding-left: 0;
    width: 48px;
    height:48px;
    display: flex;
    align-items: center;
    justify-content: center;
    bottom: 24px;
    padding-left: 44px;
    padding-top: 6px;
    border: 1px solid black;

 
    border-radius: 120px;
    // border: none;
    .navItem { display: none;}
    .menuButton { display: none;}
    .navContainer { 
      display: flex;
      align-items: center;
      flex-direction: column;
      

    

     

    }

    
    .visibleButton { 
      background:none;
      // font-size: 40px;
      // width: 100px;
      // height: 100px;
      align-items: start;
      display: flex;
      justify-content: center;
      font-weight: 100;
      padding: 6px;
      font-style: italic;
      
    }


   }

   &.expandedMenu{
    height: 50vh;
   }
   
}
.expandMenuPlatter {
  opacity: 0;
  height: 0;

  padding: 24px;
  gap: 8px;

  height: 50%;
  // overflow: scroll;
  
  display: grid;
  list-style-type: none;
  grid-template-columns: repeat(3, 1fr); // Three equal columns
  grid-template-rows: repeat(3, minmax(80px, auto)); // Ensures rows grow naturally

  .expandednavitem {
    display: flex;
    border: 1px solid var(--text-color);
    border-radius: 8px; 
    overflow: hidden;

    align-items: center;
    justify-content: center;
    text-align: center;
  }

  .darkmodeExpandtile {
    grid-column: 1 / span 2; // Spans two columns
    grid-row: 1 / span 2; // Spans two rows
    width: 100%;
    overflow: hidden;
    display: flex;
    border: 1px solid var(--text-color);
    border-radius: 8px;
  }

  &.visible {
    opacity: 1;
    height: auto;
  }
}

.minilink {
  display: flex;
  gap: 12px;
  flex-direction: row;
  align-items: center;
  height: 36px;
  padding: 12px;
  gap: 2px;

  font-size: 16px;

  .miniLinkIcon {
    font-size: 12px;
  }
}

.miniactiveLink {
  display: flex;
  gap: 12px;
  flex-direction: row;
  align-items: center;
  height: 36px;
  padding: 12px;
  gap: 2px;

  position: relative; // Ensure the pseudo-element positions correctly
  
  // Apply the pseudo-element only to miniactiveLink
  &::after {
    content: ""; // Create an empty pseudo-element
    position: absolute;
    bottom: 12px; // Adjust to position the underline exactly at the bottom
    left: 50%; // Center the underline horizontally
    transform: translateX(-50%); // Ensure it's centered exactly
    width: 0px; // Initially, no width (hidden)
    height: 2px; // Thin underline (adjust thickness as needed)
    background-color: var(--text-color); // Set the color of the underline
    transition: width 0.4s ease-out; // Animate width change
  }

  // On hover or active state, expand the underline
  &:hover::after,
  &.miniactiveLink::after {
    width: 100%; // Underline expands to full width
  }

  font-size: 16px;

  .miniLinkIcon {
    font-size: 12px;
  }
}

.expandedMenu { 
  * .menuButton { 
    * { 
      // transition: all 3s ease;
     }
    .miniLinkIcon { 
      transform: rotate(180deg);
    }
   } 

  }

